[{"/Users/feiyang/workspace/complexica/itinerary-app/src/index.js":"1","/Users/feiyang/workspace/complexica/itinerary-app/src/App.js":"2","/Users/feiyang/workspace/complexica/itinerary-app/src/reportWebVitals.js":"3","/Users/feiyang/workspace/complexica/itinerary-app/src/component/ItineraryTable.js":"4","/Users/feiyang/workspace/complexica/itinerary-app/src/component/MultiSelector.js":"5"},{"size":500,"mtime":1633179433154,"results":"6","hashOfConfig":"7"},{"size":4613,"mtime":1633232087826,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1633179433156,"results":"9","hashOfConfig":"7"},{"size":2252,"mtime":1633222828381,"results":"10","hashOfConfig":"7"},{"size":1642,"mtime":1633222621159,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vy1bel",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/feiyang/workspace/complexica/itinerary-app/src/index.js",[],["24","25"],"/Users/feiyang/workspace/complexica/itinerary-app/src/App.js",["26"],"/Users/feiyang/workspace/complexica/itinerary-app/src/reportWebVitals.js",[],"/Users/feiyang/workspace/complexica/itinerary-app/src/component/ItineraryTable.js",["27","28","29"],"import React from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material/';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport MultiSelector from './MultiSelector'\nimport PropTypes from 'prop-types';\n\nconst ItineraryTable = (props) => {\n   const {selectedItems, setFilterCallback, tableItems} = props;\n\n   return (\n      <React.Fragment>\n         <div className='CP-l-TableContainer'>\n            <TableContainer component={Paper}>\n               <Table aria-label=\"Itinerary Table\">\n                  <TableHead>\n                     <TableRow>\n                        <TableCell>No.</TableCell>\n                        <TableCell align=\"center\">City</TableCell>\n                        <TableCell align=\"center\">Country</TableCell>\n                        <TableCell align=\"center\">Date</TableCell>\n                        <TableCell align=\"center\">Temperature (°C）</TableCell>\n                        <TableCell align=\"center\">Cloud</TableCell>\n                     </TableRow>\n                  </TableHead>\n                  <TableBody>\n                     {tableItems.filter((v) => selectedItems.length === 0 || selectedItems.indexOf(v.city + '_' + v.country) >= 0)\n                        .map((item, index) => (\n                           <TableRow key={index} >\n                              <TableCell component=\"th\" scope=\"row\">{index}</TableCell>\n                              <TableCell align=\"center\">{item.city}</TableCell>\n                              <TableCell align=\"center\">{item.country}</TableCell>\n                              <TableCell align=\"center\">{item.dateStr}</TableCell>\n                              <TableCell align=\"center\">{item.temperature}</TableCell>\n                              <TableCell align=\"center\">{item.cloud}</TableCell>\n                           </TableRow>\n                        ))}\n                  </TableBody>\n               </Table>\n            </TableContainer>\n         </div>\n      </React.Fragment>\n   );\n}\n\nItineraryTable.propTypes = {\n   tableItems: PropTypes.array.isRequired,\n   selectedItems: PropTypes.array.isRequired,\n   setFilterCallback: PropTypes.func.isRequired\n};\n\nexport default ItineraryTable;","/Users/feiyang/workspace/complexica/itinerary-app/src/component/MultiSelector.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":30},{"ruleId":"34","severity":1,"message":"39","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":21},{"ruleId":"34","severity":1,"message":"40","line":8,"column":26,"nodeType":"36","messageId":"37","endLine":8,"endColumn":43},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'StyledEngineProvider' is defined but never used.","'MultiSelector' is defined but never used.","'setFilterCallback' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]