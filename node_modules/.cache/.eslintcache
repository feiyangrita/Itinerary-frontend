[{"/Users/feiyang/workspace/complexica/itinerary-app/src/index.js":"1","/Users/feiyang/workspace/complexica/itinerary-app/src/App.js":"2","/Users/feiyang/workspace/complexica/itinerary-app/src/reportWebVitals.js":"3","/Users/feiyang/workspace/complexica/itinerary-app/src/component/ItineraryTable.js":"4","/Users/feiyang/workspace/complexica/itinerary-app/src/component/MultiSelector.js":"5","/Users/feiyang/workspace/complexica/itinerary-app/src/component/SaveLoadDialogButton.js":"6"},{"size":500,"mtime":1633179433154,"results":"7","hashOfConfig":"8"},{"size":6781,"mtime":1633240627414,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1633179433156,"results":"10","hashOfConfig":"8"},{"size":2252,"mtime":1633222828381,"results":"11","hashOfConfig":"8"},{"size":1642,"mtime":1633222621159,"results":"12","hashOfConfig":"8"},{"size":3722,"mtime":1633238503631,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vy1bel",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/feiyang/workspace/complexica/itinerary-app/src/index.js",[],["28","29"],"/Users/feiyang/workspace/complexica/itinerary-app/src/App.js",["30","31","32"],"/Users/feiyang/workspace/complexica/itinerary-app/src/reportWebVitals.js",[],"/Users/feiyang/workspace/complexica/itinerary-app/src/component/ItineraryTable.js",["33","34","35"],"import React from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material/';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport MultiSelector from './MultiSelector'\nimport PropTypes from 'prop-types';\n\nconst ItineraryTable = (props) => {\n   const {selectedItems, setFilterCallback, tableItems} = props;\n\n   return (\n      <React.Fragment>\n         <div className='CP-l-TableContainer'>\n            <TableContainer component={Paper}>\n               <Table aria-label=\"Itinerary Table\">\n                  <TableHead>\n                     <TableRow>\n                        <TableCell>No.</TableCell>\n                        <TableCell align=\"center\">City</TableCell>\n                        <TableCell align=\"center\">Country</TableCell>\n                        <TableCell align=\"center\">Date</TableCell>\n                        <TableCell align=\"center\">Temperature (°C）</TableCell>\n                        <TableCell align=\"center\">Cloud</TableCell>\n                     </TableRow>\n                  </TableHead>\n                  <TableBody>\n                     {tableItems.filter((v) => selectedItems.length === 0 || selectedItems.indexOf(v.city + '_' + v.country) >= 0)\n                        .map((item, index) => (\n                           <TableRow key={index} >\n                              <TableCell component=\"th\" scope=\"row\">{index}</TableCell>\n                              <TableCell align=\"center\">{item.city}</TableCell>\n                              <TableCell align=\"center\">{item.country}</TableCell>\n                              <TableCell align=\"center\">{item.dateStr}</TableCell>\n                              <TableCell align=\"center\">{item.temperature}</TableCell>\n                              <TableCell align=\"center\">{item.cloud}</TableCell>\n                           </TableRow>\n                        ))}\n                  </TableBody>\n               </Table>\n            </TableContainer>\n         </div>\n      </React.Fragment>\n   );\n}\n\nItineraryTable.propTypes = {\n   tableItems: PropTypes.array.isRequired,\n   selectedItems: PropTypes.array.isRequired,\n   setFilterCallback: PropTypes.func.isRequired\n};\n\nexport default ItineraryTable;","/Users/feiyang/workspace/complexica/itinerary-app/src/component/MultiSelector.js",[],"/Users/feiyang/workspace/complexica/itinerary-app/src/component/SaveLoadDialogButton.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":57,"column":27,"nodeType":"46","messageId":"47","endLine":57,"endColumn":29},{"ruleId":"40","severity":1,"message":"48","line":164,"column":11,"nodeType":"42","messageId":"43","endLine":164,"endColumn":25},{"ruleId":"40","severity":1,"message":"49","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":30},{"ruleId":"40","severity":1,"message":"50","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":21},{"ruleId":"40","severity":1,"message":"51","line":8,"column":26,"nodeType":"42","messageId":"43","endLine":8,"endColumn":43},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'requestOptions' is assigned a value but never used.","'StyledEngineProvider' is defined but never used.","'MultiSelector' is defined but never used.","'setFilterCallback' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]